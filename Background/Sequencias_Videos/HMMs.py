from numpy import array
from ghmm import *

#criação da HMM LRB
sigma = IntegerRange(0,9)
pi = [1.0,0.0,0.0,0.0]
A = [[0.75, 0.25, 0.0, 0.0],[0.0, 0.75, 0.25, 0.0],[0.0, 0.0, 0.75, 0.25],[0.0, 0.0, 0.0, 1.0]]
estado_1 = [0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11]
estado_2 = [0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11]
estado_3 = [0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11]
estado_4 = [0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11]
B = [estado_1,estado_2,estado_3,estado_4]
HMM_passo_para_direita = HMMFromMatrices (sigma, DiscreteDistribution(sigma), A, B, pi)

#Treinamento
observacao_video
observacao_video_vetor = list(observacao_video)
for i in range(len(observacao_video_vetor)):
	observacao_video_vetor[i] = int(observacao_video_vetor[i])
sequencia_treino_direita = EmissionSequence(sigma,observacao_video_vetor)
HMM_passo_para_direita.baumWelch(sequencia_treino_direita)


print HMM_passo_para_direita

#sequencia_a_ser_avaliada = EmissionSequence(sigma,observacao_video_vetor)
#print 'Sequencia de Entrada na HMM -> ',
#print sequencia_a_ser_avaliada
#viterbi = HMM_passo_para_direita.viterbi(sequencia_a_ser_avaliada)
#print 'Sequencia de Estados Visitados na HMM :'
#print viterbi
#print observacao_video_vetor

